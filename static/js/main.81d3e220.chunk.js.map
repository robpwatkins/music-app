{"version":3,"sources":["components/Header.js","components/LoginForm.js","components/OnlineCard.js","components/VolumeCard.js","components/SoundCard.js","components/Notifications.js","components/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Header","AppBar","position","Toolbar","LoginForm","props","style","width","paddingTop","onSubmit","event","onLogin","Input","fullWidth","placeholder","type","Button","marginTop","color","variant","OnlineCard","Card","padding","CardHeader","title","paddingBottom","CardContent","Typography","marginBottom","CardActions","FormControlLabel","paddingLeft","control","Switch","onChange","toggleSwitch","VolumeCard","Slider","value","volumeChange","defaultValue","aria-labelledby","valueLabelDisplay","step","marks","min","max","SoundCard","FormControl","Select","dropdownChange","target","soundQuality","MenuItem","Notifications","className","notifications","map","notification","i","key","Dashboard","state","online","volume","notOnline","setState","level","quality","maxWidth","margin","Grid","container","direction","spacing","justify","item","xs","sm","this","React","Component","App","loggedIn","preventDefault","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.81d3e220.chunk.js","sourcesContent":["import React from 'react';\nimport { AppBar, Toolbar } from '@material-ui/core';\n\nfunction Header () {\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>Music App</Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Header;","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport Input from '@material-ui/core/Input';\n\nfunction LoginForm (props) {\n    return (\n      <div style={{width: '35%', paddingTop: '55px'}}>\n        <form onSubmit={event => props.onLogin(event)}>\n          <Input \n            fullWidth \n            placeholder=\"Username *\">\n          </Input>\n          <br/>\n          <Input \n            type=\"password\" \n            fullWidth \n            placeholder=\"Password *\">\n          </Input>\n          <br/>\n          <Button \n            type=\"submit\" \n            fullWidth\n            style={{marginTop: '15px'}} \n            color=\"primary\" \n            variant=\"contained\">\n            Submit\n          </Button>\n        </form>\n      </div>\n    )\n}\n\nexport default LoginForm;","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nfunction OnlineCard (props) {\n\n  return (\n    <Card style={{padding: '10px 0px 3px 0px'}}>\n      <CardHeader title=\"Online Mode\" style={{paddingBottom: '0'}}/>\n      <CardContent>\n        <Typography variant=\"body1\" style={{marginBottom: '25px'}}>\n          Is this application connected to the internet?\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <FormControlLabel\n          style={{paddingLeft: '5px'}}\n          control={\n            <Switch onChange={props.toggleSwitch}/>\n          }\n        />\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default OnlineCard;","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Slider from '@material-ui/core/Slider';\n\nfunction VolumeCard (props) {\n\n  return (\n    <Card style={{padding: '10px 0px 13px 0px '}}>\n      <CardHeader title=\"Master Volume\" style={{paddingBottom: '0'}} />\n      <CardContent>\n        <Typography variant=\"body1\" style={{marginBottom: '25px'}}>\n          Overrides all other sound settings in this application\n        </Typography>\n      </CardContent>\n      <CardActions>\n      <Slider\n        onChange={(event, value) => props.volumeChange(value)}\n        defaultValue={30}\n        aria-labelledby=\"discrete-slider\"\n        valueLabelDisplay=\"auto\"\n        step={10}\n        marks\n        min={0}\n        max={100}\n      />\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default VolumeCard;","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nfunction SoundCard (props) {\n\n    return (\n      <Card style={{padding: '10px 0px'}}>\n        <CardHeader title=\"Sound Quality\" style={{paddingBottom: '0'}} />\n        <CardContent>\n          <Typography variant=\"body1\">\n            Manually control the music quality in the event of poor connection\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <FormControl fullWidth>\n            <Select onChange={event => props.dropdownChange(event.target.value)} value={props.soundQuality}>\n              <MenuItem value={1}>Low</MenuItem>\n              <MenuItem value={2}>Normal</MenuItem>\n              <MenuItem value={3}>High</MenuItem>\n            </Select>\n          </FormControl>\n        </CardActions>\n      </Card>\n    );\n}\n\nexport default SoundCard;","import React from 'react';\n\nfunction Notifications (props) {\n  return (\n    <div className=\"scrollContainer\">\n      <div className=\"notificationContainer\">\n        {props.notifications.map((notification, i) => {\n          return (\n            <div key={i}>\n              <h5>{notification}</h5>\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications;","import React from 'react';\nimport OnlineCard from './OnlineCard';\nimport VolumeCard from './VolumeCard';\nimport SoundCard from './SoundCard';\nimport Notifications from './Notifications';\nimport Grid from '@material-ui/core/Grid';\n\nclass Dashboard extends React.Component {\n  state = {\n    online: true,\n    volume: 30,\n    soundQuality: 2,\n    notifications: []\n  }\n\n  toggleSwitch = () => {\n    const notOnline = !this.state.online;\n    notOnline &&\n    this.setState({\n      notifications: [...this.state.notifications,\n         \"Your application is offline. You won't be able to share or stream music to other devices.\"]\n    });\n    this.setState({ online: notOnline });\n  }\n\n  volumeChange = level => {\n    level >= 80 && \n    this.setState({\n      notifications: [...this.state.notifications, \n        \"Listening to music at a high volume could cause long-term hearing loss.\"]\n    });\n    this.setState({ volume: level });\n  }\n\n  dropdownChange = quality => {\n    quality === 1 &&\n    this.setState({\n      notifications: [...this.state.notifications,\n        \"Music quality is degraded. Increase quality if your connection allows it.\"]\n    });\n    this.setState({ soundQuality: quality });\n  }\n\n  render() {\n    return (\n      <div style={{maxWidth: '850px', margin: '25px'}}>\n        <h2 style={{color: 'gray'}}>Welcome, User!</h2>\n        <Grid \n          container \n          direction=\"row\" \n          spacing={6} \n          justify=\"center\" \n          style={{padding: '10px'}}>\n          <Grid item xs={8} sm={4}>\n            <OnlineCard toggleSwitch={this.toggleSwitch}/>\n          </Grid>\n          <Grid item xs={8} sm={4}>\n            <VolumeCard volumeChange={this.volumeChange}/>\n          </Grid>\n          <Grid item xs={8} sm={4}>\n            <SoundCard dropdownChange={this.dropdownChange} soundQuality={this.state.soundQuality}/>\n          </Grid>\n        </Grid>\n        <h3>System notifications:</h3>\n        <Notifications notifications={this.state.notifications}/>\n      </div>\n    )\n  }\n}\n\nexport default Dashboard;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport LoginForm from './components/LoginForm';\nimport Dashboard from './components/Dashboard';\n\nclass App extends React.Component {\n  state = {\n    loggedIn: false,\n  }\n\n  onLogin = props => {\n    props.preventDefault();\n    this.setState({ \n      loggedIn: true,\n     });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        {!this.state.loggedIn ? (\n          <LoginForm onLogin={this.onLogin} />\n        ):(\n          <Dashboard />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}